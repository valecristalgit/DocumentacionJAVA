/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parcial2_godoyvaleria;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.TreeMap;
import javax.swing.JOptionPane;

/**
 *
 * @author 
 */
public class JFrame extends javax.swing.JFrame {

    /**
     * Creates new form JFrame
     */
    public JFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ejer2 = new javax.swing.JButton();
        Ejer3 = new javax.swing.JButton();
        Ejer4 = new javax.swing.JButton();
        Ejer5 = new javax.swing.JButton();
        btnMensaje = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Ejer2.setText("Ejer2");
        Ejer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ejer2ActionPerformed(evt);
            }
        });

        Ejer3.setText("Ejer3");
        Ejer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ejer3ActionPerformed(evt);
            }
        });

        Ejer4.setText("Ejer4");
        Ejer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ejer4ActionPerformed(evt);
            }
        });

        Ejer5.setText("Ejer5");
        Ejer5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ejer5ActionPerformed(evt);
            }
        });

        btnMensaje.setText("Mensaje");
        btnMensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMensajeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Ejer5)
                        .addGap(111, 111, 111)
                        .addComponent(btnMensaje))
                    .addComponent(Ejer4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Ejer3)
                        .addComponent(Ejer2)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(Ejer2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Ejer3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Ejer4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ejer5)
                    .addComponent(btnMensaje))
                .addContainerGap(133, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Ejer2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ejer2ActionPerformed

        //inicializo profecionales
        Profesional prof1 = new Profesional(01, "Week", "John", new Date(1989, 04, 03), 4290, new TreeMap<Integer, Especialidad>());
        Profesional prof2 = new Profesional(02, "DiMacio","Casia", new Date(1987, 07, 02), 4291, new TreeMap<Integer, Especialidad>());

        //inicializo pacientes
        Paciente pac1 = new Paciente(01, "Lopez", "Marcos", new Date(1999, 04, 04), 413344, "Calle 123", "2323445566", "LP", true);
        Paciente pac2 = new Paciente(02, "Cardenas", "Ana", new Date(1997, 02, 04), 223344, "Calle 123", "2323445566", "LP", true);
        Paciente pac6 = new Paciente(06, "Perez", "Sofía", new Date(1997, 05, 11), 443344, "Calle 123", "2323445566", "LP", true);
        
        //inicializo empleado
        Empleado emp1 = new Empleado("Secretaria", 01, "Sosa", "Shirly", new Date(1998, 03, 02));

        //Inicializo turnos
        Turno turno1 = new Turno();
        turno1.setFechaTurno(new Date(2023, 3, 1));
        turno1.setPaciente(pac1);
        turno1.setResCarga(emp1);
        
        Turno turno2 = new Turno();
        turno2.setFechaTurno(new Date(2023, 9, 12));
        turno2.setPaciente(pac2);
        turno2.setResCarga(emp1);
        
        Turno turno3 = new Turno();
        turno3.setFechaTurno(new Date(2023, 9, 12));
        turno3.setPaciente(pac6);
        turno3.setResCarga(emp1);
        
        //Inicializo especialidades
        Especialidad esp1 = new Especialidad();
        esp1.setId(191);
        esp1.setNombreEsp("Radiología");
        Especialidad esp2 = new Especialidad();
        esp2.setId(02);
        esp2.setNombreEsp("Traumatología");
        Especialidad esp3 = new Especialidad();
        esp3.setId(03);
        esp3.setNombreEsp("Pediatría");      

        //Inicializo turnos
        prof1.agendarTurno(esp1, turno3);
        prof1.agendarTurno(esp1, turno2);
        
        prof2.agendarTurno(esp2, turno1);
        
        //inicializo una lista
        ArrayList<Especialidad> listaEspe=new ArrayList();
        
        //se añaden a la lista
        listaEspe.add(esp1);
        listaEspe.add(esp2);
        listaEspe.add(esp3);
        
        
        int id_buscar = esp1.getId();
        
        for(int i=0;i<listaEspe.size();i++){ 
            Especialidad espe = listaEspe.get(i);
            if(espe.getTurnos().size()>0 && espe.getId()==id_buscar){
                for(int it=0;it<espe.getTurnos().size();it++){
                    Turno t = espe.getTurnos().get(it); 
                    Date dia = new Date(2023, 9, 12);
                    
                    
                    if(dia.equals(t.getFechaTurno())){ 
                        System.out.println("\nEspecialidad: "+espe.getNombreEsp()+"\nNroTurno: "+t.getNro() + "\nPaciente:" + t.getPaciente().toString()+"\nSecretaria: "+t.getResCarga());
                    }
                }
            }
        } 
                
    }//GEN-LAST:event_Ejer2ActionPerformed

    private void Ejer3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ejer3ActionPerformed
        System.out.println("\n_______________________________________________________");
        System.out.println("Ejercicio3: ");
        //Inmicializo profecionales
        Profesional prof1 = new Profesional(01, "Week", "John", new Date(1989, 04, 03), 4290, 
                new TreeMap<Integer, Especialidad>());
        Profesional prof2 = new Profesional(02, "DiMacio","Casia", new Date(1987, 07, 02), 4291, 
                new TreeMap<Integer, Especialidad>());

        //inicializo pacientes
        Paciente pac1 = new Paciente(01, "Lopez", "Marcos", new Date(1999, 04, 04), 413344, "Calle 123", "2323445566", "LP", true);
        Paciente pac2 = new Paciente(02, "Cardenas", "Ana", new Date(1997, 02, 04), 223344, "Calle 123", "2323445566", "LP", true);
        Paciente pac6 = new Paciente(06, "Perez", "Sofía", new Date(1997, 05, 11), 443344, "Calle 123", "2323445566", "LP", true);
        
        //inicializo empleado
        Empleado emp1 = new Empleado("Secretaria", 01, "Sosa", "Shirly", new Date(1998, 03, 02));

        //Inicializo turnos
        Turno turno1 = new Turno();
        turno1.setFechaTurno(new Date(2023, 3, 1));
        turno1.setPaciente(pac1);
        turno1.setResCarga(emp1);
        
        Turno turno2 = new Turno();
        turno2.setFechaTurno(new Date(2023, 9, 12));
        turno2.setPaciente(pac2);
        turno2.setResCarga(emp1);
        
        Turno turno3 = new Turno();
        turno3.setFechaTurno(new Date(2023, 9, 12));
        turno3.setPaciente(pac6);
        turno3.setResCarga(emp1);
        
        //inicializo especialidades
        Especialidad esp1 = new Especialidad();
        esp1.setId(191);
        esp1.setNombreEsp("Radiología");
        Especialidad esp2 = new Especialidad();
        esp2.setId(02);
        esp2.setNombreEsp("Traumatología");
        Especialidad esp3 = new Especialidad();
        esp3.setId(03);
        esp3.setNombreEsp("Pediatría"); 
        
        //inicializo turnos
        prof1.agendarTurno(esp1, turno1);
        prof1.agendarTurno(esp1, turno2);
        
        prof2.agendarTurno(esp2, turno3);
        
        //Inicializo una lista 
        ArrayList<Profesional> listaProf = new ArrayList();
        //Añade profecinales
        listaProf.add(prof1);
        listaProf.add(prof2);
        
        //Tomo a cada profecional y muestra a quien sea responsable de los turnos de Radiología
        //imprime todos los turnos por especialidad.
        
        for(int indexp=0;indexp<listaProf.size();indexp++){
            Profesional prof = listaProf.get(indexp);
            prof.listarTurnosPorEspecialidad();
        }
            
            
    }//GEN-LAST:event_Ejer3ActionPerformed

    private void Ejer4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ejer4ActionPerformed
        System.out.println("\n_______________________________________________________");
        System.out.println("Ejercicio4: ");
        /*
        Del total de pacientes activos, 
        listar solo aquellos con edades mayores a 65 años que están afiliados a la obra social INSSSEP
        a_Generamos una lista de pacientes vecía.
        b_Generamos pacientes(los mismos que están definidos arriba)
               
        */ 
        ArrayList<Paciente> pacientes = new ArrayList<>();
        
        
        Paciente paciente2 = new Paciente(8001, "GONZALES", "PEDRO", new Date(1957, 3, 4),
            20422130, "BARRIO CENTRO", "TEL:451xxxxxx", "INSSSEP", false);
        
        Paciente paciente3 = new Paciente(7001, "ALTAMIRADA", "JUANA", new Date(1957, 6, 8),
            15778839, "CALLE 12", "CAL:51xxxxxx", "INSSSEP", true);
        
        Paciente paciente4 = new Paciente(8401, "GIORDANO", "PABLO", new Date(1954, 5, 8), 
                23909973, "P. SOL", "CEL:15xxxxxx", "INSSSEP", true);
        
        //c_Guardamos los pacientes en un ArrayList 
        pacientes.add(paciente2);
        pacientes.add(paciente3);
        pacientes.add(paciente4);
        
        
        //Recorremos la lista y compáramos si están activos y tienen la obra social INSSSEP se muestran.
        for(int i=0;i<pacientes.size();i++){
            if(pacientes.get(i).isActivo() && "INSSSEP".equals(pacientes.get(i).getObraSocial()) ){
                System.out.println("----------------------------------------------");
                Date fec_nac = pacientes.get(i).getFechaNacimiento(); //se toma la fecha de nacimiento del pasiente
                int anio_paciente = fec_nac.getYear();// se extrae el año como un entero
                int edad = 2023 - anio_paciente; //se calcula la edad actual
                //Si es mayor a 65 se muestra por pantalla
                if( edad >= 65){
                    System.out.println("Edad del pasiente: " + edad);
                    System.out.println("Paciente: "+ pacientes.get(i).toString()+"\nObra Social: "+pacientes.get(i).getObraSocial());
           
                }
            }
        }
    }//GEN-LAST:event_Ejer4ActionPerformed

    private void Ejer5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ejer5ActionPerformed
        System.out.println("\n_______________________________________________________");
        System.out.println("Ejercicio5: ");
        /*
        computadoras, muebles de oficina, televisores,
        sillas, camas de una plaza y dos plazas
        a_definimos la lista que guarda losrecursos y dichos recursos
        */
        ArrayList<Recurso> recursos = new ArrayList<>();
        
        recursos.add( new Recurso(0, "computadora", "electronica", "32 pulgadas, gris, W10"));
        recursos.add( new Recurso(1, "silla", "mueble de oficina", "ploastico"));
        recursos.add( new Recurso(2, "escritorio", "mueble de oficina", "madera, marrón"));
        recursos.add( new Recurso(3, "cama", "mueble de dormitorio", "Dos Plazas"));
        recursos.add( new Recurso(4, "cama", "mueble de dormitorio", "Una plaza"));
        recursos.add( new Recurso(5, "cama", "mueble de dormitorio", "Una plaza"));
        recursos.add( new Recurso(6, "computadora", "electronica", "32 pulgadas, negro, W10"));
        recursos.add( new Recurso(7, "televisor", "electronica", "42 pulgadas, negro"));
        recursos.add( new Recurso(8, "escritorio", "mueble de oficina", "metal, blanco"));
        recursos.add( new Recurso(9, "silla", "mueble", "madera, marrón"));
        //creamos dos contadores
        int contTv = 0;
        int contCam1 = 0;
  
        
        for(int i  = 0; i < recursos.size(); i++){ //recorremos la lista 
            if(recursos.get(i).getNombre() == "cama" && recursos.get(i).getDescripcion() == "Una plaza"){ // si los recursos cumplen con estas características
                contCam1 +=1;//se suman la cantidad de camas                 
            }
            if(recursos.get(i).getNombre() == "televisor"){
                contTv +=1;//se suman la cantidad de televisores
            }
        }//se imprimen por pantalla las cantidades
        
        System.out.println("En el edificio hay: ");
        System.out.println("Hay " + contCam1 +" cama/s de una plaza.");
        System.out.println("Hay " + contTv +" televisor/es.");
    }//GEN-LAST:event_Ejer5ActionPerformed

    private void btnMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMensajeActionPerformed
        Calendar c = Calendar.getInstance();
        c.set(Calendar.YEAR, 2023);
        c.set(Calendar.MONTH, 8);
        c.set(Calendar.DAY_OF_WEEK, 1); //1=Domingo
        SimpleDateFormat sFormat = new SimpleDateFormat("dd/MM/yyyy");
        System.out.println("Fecha " + sFormat.format(c.getTime()));
        
        
        String msj = "Felicidades Valeria, esta muy entendible el código que esta escrito." + '\n'
                   + "Te invito a que sigas participando." + '\n'
                   + "Como comentario te puedo aportar que la clase persona seria coneniente sea abstracta" + '\n'
                   + "luego en las clases que heredes acuerdate que puedes usar la instruccion super(...) para" + '\n'
                   + "darle valores a los atributos de la super clase o clase superior.-" + '\n'
                   + "También te invito a que a futuro evalues la posibilidad de usar la clase Calendar para el trabajo" + '\n'
                   + "con fecha. Por ejemplo: setear la fecha a un dia en particular " + sFormat.format(c.getTime()) + '\n'
                   + "En el codigo del boton esta definido el trabajo con la fecha.-";
        
        JOptionPane.showMessageDialog(btnMensaje, msj, "Información", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnMensajeActionPerformed
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Ejer2;
    private javax.swing.JButton Ejer3;
    private javax.swing.JButton Ejer4;
    private javax.swing.JButton Ejer5;
    private javax.swing.JButton btnMensaje;
    // End of variables declaration//GEN-END:variables
}
